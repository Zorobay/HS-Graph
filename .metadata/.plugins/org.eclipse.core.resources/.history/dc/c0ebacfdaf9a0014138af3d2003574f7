import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
<<<<<<< HEAD
import javafx.scene.control.ToggleButton;
import javafx.scene.control.Tooltip;
import javafx.scene.image.Image;
=======
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
>>>>>>> 13dd63a117ac195933c8d60f072346ef05b2c633
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

public class HSGraph extends Application {

	public static void main(String[] args) {
		launch(args);
	}

	int r = 0;
	int g = 0;
	int b = 0;

	public void start(Stage primaryStage) throws Exception {
<<<<<<< HEAD

		primaryStage.setTitle("Labels");
		Image img = new Image("file:images/ok-icon.png", 30, 30, true, true);
		ToggleButton tb = new ToggleButton("Red");
		tb.getStyleClass().add("redb");
		ToggleButton tb2 = new ToggleButton("Green");
		tb2.getStyleClass().add("greenb");
		ToggleButton tb3 = new ToggleButton("Blue");
		tb3.getStyleClass().add("blueb");
		tb3.setTooltip(new Tooltip("The blue button"));

		Rectangle rect = new Rectangle();
		rect.setHeight(50);
		rect.setWidth(135);
		rect.setFill(Color.rgb(0, 0, 0));
		rect.setArcHeight(10);
		rect.setArcWidth(10);

		GridPane grid = new GridPane();
		grid.setAlignment(Pos.CENTER);
		grid.setHgap(5);
		grid.setVgap(10);
		grid.setPadding(new Insets(25, 25, 25, 25));
		grid.setGridLinesVisible(false);

		// action events
		tb.setOnAction((ActionEvent e) -> {
			if (r == 255)
				r = 0;
			else
				r = 255;
			rect.setFill(Color.rgb(r, g, b));
		});

		tb2.setOnAction((ActionEvent e) -> {
			if (g == 255)
				g = 0;
			else
				g = 255;
			rect.setFill(Color.rgb(r, g, b));
		});

		tb3.setOnAction((ActionEvent e) -> {
			if (b == 255)
				b = 0;
			else
				b = 255;
			rect.setFill(Color.rgb(r, g, b));
		});
		// add all components
		grid.add(tb, 0, 0);
		grid.add(tb2, 1, 0);
		grid.add(tb3, 2, 0);
		grid.add(rect, 0, 1, 3, 1);

		Scene scene = new Scene(grid);
		primaryStage.setScene(scene);
		scene.getStylesheets().add(
				HSGraph.class.getResource("style.css").toExternalForm());
=======
		primaryStage.setTitle("HS-Graph");

		//Grid Pane Setup
		GridPane grid = new GridPane();
		grid.setAlignment(Pos.CENTER);
		grid.setHgap(5);
		grid.setVgap(5);
		grid.setPadding(new Insets(25, 25, 25, 25));
		grid.setGridLinesVisible(false);

		//Labels
		Label yLabel = new Label("y = ");
		Label xLabel = new Label("x");
		Label plusLabel = new Label (" + ");
		
		//Input fields
		TextField mValue = new TextField("m value");
		mValue.setPrefColumnCount(4);
		TextField cValue = new TextField("c value");
		cValue.setPrefColumnCount(4);
		
		//The submit button
		Button drawButton = new Button("Draw");
		drawButton.getStyleClass().add("bballs");
		
		//Add all components except canvas
		grid.add(yLabel, 0, 0);
		grid.add(mValue, 1, 0);
		grid.add(xLabel, 2, 0);
		grid.add(plusLabel, 3, 0);
		grid.add(cValue, 4, 0);
		grid.add(drawButton, 5, 0);
		
		//Setup Canvas
		GraphField graphField = new GraphField(300, 200);
		grid.add(graphField.getCanvas(), 0, 1, 5, 1);
		
		//Button action event
		drawButton.setOnAction((ActionEvent e) -> {
			graphField.setm(Integer.parseInt(mValue.getText()));
			graphField.setc(Integer.parseInt(cValue.getText()));
			graphField.paintCanvas();
		});

		Scene scene = new Scene(grid);
		scene.getStylesheets().add(HSGraph.class.getResource("style.css").toExternalForm());
		primaryStage.setScene(scene);
>>>>>>> 13dd63a117ac195933c8d60f072346ef05b2c633
		primaryStage.show();
	}
}
